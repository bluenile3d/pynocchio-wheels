name: Build Wheels
on: [push]
jobs:
  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    env:
      CIBW_BUILD_VERBOSITY: 3
      CIBW_REPAIR_WHEEL_COMMAND_MACOS: "delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v --verbose 2 {wheel}"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install cibuildwheel
        run: pip install cibuildwheel
      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y cmake ninja-build gcc g++ libpython3-dev
      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install cmake ninja
      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: choco install cmake ninja -y
      - name: Build wheels
        run: python -m cibuildwheel --output-dir dist --only cp311-${{ matrix.os == 'windows-latest' && 'win_amd64' || matrix.os == 'macos-latest' && 'macosx_arm64' || 'manylinux_x86_64' }}
      - name: Inspect built wheel (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          ls -la /private/var/folders/bz/h4njq8yd7td8qk42rt_9f0p00000gn/T/cibw-run-*/cp311-macosx_arm64/built_wheel/
          otool -L /private/var/folders/bz/h4njq8yd7td8qk42rt_9f0p00000gn/T/cibw-run-*/cp311-macosx_arm64/built_wheel/pynocchio-0.0.4-cp311-cp311-macosx_12_0_arm64.whl
        continue-on-error: true
      - name: Debug dist contents
        if: always()
        shell: pwsh
        run: |
          if (Test-Path dist) { Get-ChildItem dist } else { Write-Output "dist not found" }
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: pynocchio-wheels-${{ matrix.os }}
          path: dist/*.whl
          if-no-files-found: warn